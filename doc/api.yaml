openapi: 3.0.3
info:
  title: WASA Text
  description: |
    API for Wasa Text
  version: "1"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
         description: User details
         required: true
         content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'Ë†.*?$'
                  minLength: 3
                  maxLength: 16
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                   $ref: '#/components/schemas/Username'
                  apiKey:
                   type: string
                   example: "xyz1234567890abcdef"
  /users/{id}/name:
    put:
      tags: ["user info"]
      summary: Update a user's name
      description: Update the username for a user identified by their unique ID.
      operationId: setMyUserName 
      security:
        - PrettyGoodSecurity: []
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for a user.
          schema:
            $ref: '#/components/schemas/UserId'
      requestBody:
        description: The new username to be assigned to the user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  $ref: '#/components/schemas/Username'
              required:
                - username
      responses:
        '204':
          description: Successfully updated the username.
        '400':
          description: Invalid input or parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid username format."
        '401':
          description: Unauthorized access due to missing or invalid security token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized."
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found."
  /users/{id}/photo:
    put:
      tags: ["user info"]
      summary: Update a user's photo
      description: Update the photo for a user identified by their unique ID.
      operationId: setMyPhoto
      security:
        - PrettyGoodSecurity: []
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier for a user.
          schema:
            $ref: '#/components/schemas/UserId'
      requestBody:
        description: The new photo to be assigned to the user.
        required: true
        content:
         image/gif:
            schema:
                type: string
                format: binary
      responses:
        '204':
          description: Successfully updated the photo.
        '400':
          description: Invalid input or parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Not a gif."
        '401':
          description: Unauthorized access due to missing or invalid security token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized."
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found."
  /conversations:
    get:
      tags: ["getting conversations"]
      summary: Retrieve conversations for a user
      description: Retrieves a list of conversation IDs for a specific user.
      operationId: getMyConversations 
      security:
        - PrettyGoodSecurity: []
      responses:
        '200':
          description: A list of conversation IDs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversations:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConversationId'
        '401':
          description: Unauthorized access due to missing or invalid security token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized."
        '404':
          description: Conversation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Conversation not found."
  /conversations/{convid}:
    parameters:
     - name: convid
       in: path
       required: true
       description: The unique identifier for the conversation.
       schema:
         $ref: '#/components/schemas/ConversationId'
    get:
      tags: ["getting conversations"]
      summary: Retrieve the deteils of a specific conversation
      description: Retrieves the details of a specific conversation using its ID.
      operationId: getConversation
      security:
        - PrettyGoodSecurity: []
      responses:
        '200':
          description: A specified conversation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  participants:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserId'
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/MessageId'
        '400':
          description: Invalid request due to malformed parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid conversation or message ID."
        '401':
          description: Unauthorized access due to missing or invalid security token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized."
        '404':
          description: Conversation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Conversation not found."
    post:
     tags: ["messages"]
     summary: Send a message to a specific conversation
     description: Sends a new message to the specified conversation.
     operationId: sendMessage
     requestBody:
      description: The message to be sent to the conversation.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
        image/gif:
          schema:
            type: string
            format: binary
     security:
      - PrettyGoodSecurity: []
     responses:
      '204':
        description: Message successfully sent to the conversation.
      '400':
        description: Invalid request body or parameters.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Invalid message format."
      '401':
        description: Unauthorized access due to missing or invalid security token.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Unauthorized."
      '404':
        description: Conversation not found.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  example: "Conversation not found."
  /conversations/{convid}/messages/{messageId}:
    parameters:
      - name: convid
        in: path
        required: true
        description: The unique identifier for the conversation.
        schema:
          $ref: '#/components/schemas/ConversationId'
      - name: messageId
        in: path
        required: true
        description: The unique identifier for the message to be deleted.
        schema:
          $ref: '#/components/schemas/MessageId'
    delete:
      tags: ["messages"]
      summary: Delete a specific message
      description: Deletes a specific message in a conversation using its ID.
      operationId: deleteMessage
      security:
        - PrettyGoodSecurity: []
      responses:
        '204':
          description: Message successfully deleted. No content is returned.
        '400':
          description: Invalid request due to malformed parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid conversation or message ID."
        '401':
          description: Unauthorized access due to missing or invalid security token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized."
        '404':
          description: Message or conversation not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Message or conversation not found."
    post:
     tags: ["messages"]
     summary: Forward a message in a conversation
     description: Forwards a specific message to another conversation or user.
     operationId: forwardMessage
     requestBody:
       description: The operation details for forwarding a message.
       required: true
       content:
         application/json:
           schema:
             type: object
             properties:
               messageId:
                 $ref: '#/components/schemas/MessageId'
               targetConversationId:
                 $ref: '#/components/schemas/ConversationId'
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Message successfully forwarded.
       '400':
         description: Invalid request due to malformed parameters.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Invalid message ID or target conversation ID."
       '401':
         description: Unauthorized access due to missing or invalid security token.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Unauthorized."
       '404':
         description: Message or target conversation not found.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Message or target conversation not found."
  /conversations/{convid}/messages/{messageId}/comments:
   parameters:
     - name: convid
       in: path
       required: true
       description: The unique identifier for the conversation.
       schema:
         $ref: '#/components/schemas/ConversationId'
     - name: messageId
       in: path
       required: true
       description: The unique identifier for the message to comment on.
       schema:
         $ref: '#/components/schemas/MessageId'
   post:
     tags: ["messages"]
     summary: Post a comment on a message
     description: Allows a user to post a comment on a specific message in a conversation.
     operationId: commentMessage
     requestBody:
       description: The message content to be posted as a comment.
       required: true
       content:
         application/json:
           schema:
             $ref: '#/components/schemas/Message'
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Comment successfully posted.
       '400':
         description: Invalid request due to malformed parameters or comment content.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Invalid comment content or parameters."
       '401':
         description: Unauthorized access due to missing or invalid security token.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Unauthorized."
       '404':
         description: Message or conversation not found.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Message or conversation not found."
   delete:
     tags: ["messages"]
     summary: Remove the comment from a message
     description: Deletes the single comment associated with the specified message in a conversation.
     operationId: uncommentMessage
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Comment successfully deleted. No content is returned.
       '400':
         description: Invalid request due to malformed parameters.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Invalid parameters or message doesn't have a comment."
       '401':
         description: Unauthorized access due to missing or invalid security token.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Unauthorized."
       '404':
         description: Message or comment not found.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Message or comment not found."
  /conversations/{convid}/name:
   parameters:
     - name: convid
       in: path
       required: true
       description: The unique identifier for the conversation (group).
       schema:
         $ref: '#/components/schemas/ConversationId'
   put:
     tags: ["groups"]
     summary: Change the group name
     description: Allows the user to change the name of a conversation (group). The group name may  be unchangeable if it is a simple conversation.
     operationId: setGroupName
     requestBody:
       description: The new name for the conversation (group).
       required: true
       content:
         application/json:
           schema:
            type: object
            properties:
             groupname:
              $ref: '#/components/schemas/Username'
            required:
              - groupname
            
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Group name successfully changed.
       '400':
         description: Invalid request, such as invalid parameters or missing name.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Invalid request. Group name is required."
       '403':
         description: Forbidden. The group name cannot be changed.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "The group name is unchangeable."
       '404':
         description: Conversation not found.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Conversation not found."
  /conversations/{convid}/photo:
   parameters:
     - name: convid
       in: path
       required: true
       description: The unique identifier for the conversation (group).
       schema:
         $ref: '#/components/schemas/ConversationId'
   put:
     tags: ["groups"]
     summary: Change the group photo for a conversation
     description: Allows the user to change the photo (GIF) of a conversation (group).
     operationId: setGroupPhoto
     requestBody:
       description: The new GIF photo for the group conversation.
       required: true
       content:
         image/gif:
           schema:
             type: string
             format: binary
             description: The new group photo in GIF format.
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Group photo successfully changed.
       '400':
         description: Invalid request, such as missing or invalid photo.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Invalid photo format or missing photo."
       '403':
         description: Forbidden. The group photo cannot be changed.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "The group photo is unchangeable."
       '404': 
         description: Conversation not found.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Conversation not found."
  /conversations/{convid}/members:
    parameters:
      - name: convid
        in: path
        required: true
        description: The unique identifier for the conversation (group).
        schema:
          $ref: '#/components/schemas/ConversationId'
    put:
      tags: ["groups"]
      summary: Add user(s) to the group conversation
      description: Adds one or more user IDs to the conversation's members list.
      operationId: addToGroup
      requestBody:
        description: The user IDs to be added to the group conversation.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserId'
                  description: A list of user IDs to be added to the group.
                  example: [12, 34]
              required:
                - userIds
      security:
        - PrettyGoodSecurity: []
      responses:
        '204':
          description: Users successfully added to the group.
        '400':
          description: Invalid request, such as missing or invalid user IDs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid user IDs."
        '403':
          description: Forbidden. The user cannot be added to the group.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User cannot be added to the group due to it being a conversation."
        '404':
          description: Conversation not found or user IDs invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Conversation not found or user ID(s) are invalid."
    delete:
     tags: ["groups"]
     summary: Leave the group conversation
     description: Allows the user to leave the group conversation. Users can only leave their own  group, not kick others.
     operationId: leaveGroup
     security:
       - PrettyGoodSecurity: []
     responses:
       '204':
         description: Successfully left the group.
       '403':
         description: Forbidden. You cannot remove or kick other members, only leave the group  yourself.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "You cannot kick members. You can only leave the group."
       '404':
         description: Conversation not found or user is not part of the group.
         content:
           application/json:
             schema:
               type: object
               properties:
                 error:
                   type: string
                   example: "Conversation not found or user is not a member of the group."


components: 
  securitySchemes:
    PrettyGoodSecurity:
      type: apiKey
      in: header
      name: security_token
      description: Security token used for authorization.
  schemas:
    UserId:
        type: integer
        description: The unique identifier for a user.
        example: 12
    Username:
      type: string
      description: A username with a length between 3 and 16 characters.
      minLength: 3
      maxLength: 16
      pattern: '^.*?$'
      example: Maria
    Message:
      type: string
      description: A message or a comment.
      minLength: 1
      maxLength: 10000
      pattern: '^.*?$'
      example: Hello
    MessageId:
      type: integer
      description: The unique identifier for a message.
      example: 13
      required:
        - MessageArray
        - UserArray
    ConversationId:
      type: integer
      description: The unique identifier for a message.
      example: 14